library(httr)
library(jsonlite)
library(XML)
library(dplyr)
base.url.titleIX <- "http://projects.chronicle.com/titleix/api/v1/cases/"
title.IX.response <- GET(base.url.titleIX)
title.IX.content <- content(title.IX.response, "text")
title.IX.content <- content(title.IX.response, "text")
title.IX.data <- fromJSON(title.IX.content)
View(title.IX.data)
View(title.IX.data)
View(title.IX.data)
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
maps.app.id <- "AIzaSyCddaHkTvSYmsqCDwnFnvAMxhD0GFltFMU"
findCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
return(as.list(coords))
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- unlist(college.names)
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- c(college.names)
is.vector("University of Washington", "Washington State University")
college.names <- (x("University of Washington", "Washington State University"))
college.names <- (c("University of Washington", "Washington State University"))
is.vector(college.names)
print(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- c(college.names)
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
college.names <- (c("University of Washington", "Washington State University"))
college.names <- college.names$college
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
maps.app.id <- "AIzaSyCddaHkTvSYmsqCDwnFnvAMxhD0GFltFMU"
findCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
return(as.list(coords))
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
library(httr)
library(jsonlite)
library(XML)
library(dplyr)
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
print(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
maps.app.id <- "AIzaSyCddaHkTvSYmsqCDwnFnvAMxhD0GFltFMU"
findCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
return(as.list(coords))
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
base.url.titleIX <- "http://projects.chronicle.com/titleix/api/v1/cases/"
title.IX.response <- GET(base.url.titleIX)
title.IX.content <- content(title.IX.response, "text")
title.IX.data <- fromJSON(title.IX.content)
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
print(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
college.coordinates <- data.frame(college.names, coordinates)
title.IX.data$coordinates <- coordinates
View(title.IX.data)
View(title.IX.data)
coordinates <- as.vector(coordinates)
is.vector(coordinates)
is.vector(college.names)
data.frame(college.names, coordinates)
is.vector(coordinates)
is.vector(college.names)
coordinates <- as.list(coordinates)
is.vector(coordinates)
coord <- coordinates
for item in coord {
print item$lat
}
coord <- coordinates
for (item in coord) {
print item$lat
}
coord <- coordinates
for (item in coord) {
print(item$lat)
}
View(coordinates)
name <- "University of Washington"
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
coords
coords$lat
coords$lng
name
lat <- c()
coord <- coordinates
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
lat <- GetLat(coord)
lat <- GetLat(coordinates)
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
}
lat <- GetLat(coordinates)
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
}
lattitude <- GetLat(coordinates)
GetLong <- function(coord) {
lng <- c()
for (item in coord) {
lng <- c(lng, item$lng)
}
return(lng)
}
longitude <- GetLet(longitude)
GetLong <- function(coord) {
lng <- c()
for (item in coord) {
lng <- c(lng, item$lng)
}
return(lng)
}
longitude <- GetLong(longitude)
longitude <- GetLong(coordinates)
return(as.list(names, coords))
FindCoordinates <- function(name) {
name <- "University of Washington"
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
return(c(names, coords))
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
print(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
name <- "University of Washington"
c(name, coords)
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
return(c(name, coords))
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
print(college.names)
coordinates <- as.list(lapply(college.names, findCoordinates))
coordinates <- (lapply(college.names, findCoordinates))
View(coords)
View(coords)
View(coords)
print(c(name, coords))
small.list <- c("univeristy of washington", "washington state university")
lapply(college.names, FindCoordinates )
lapply(small.list, FindCoordinates )
coordinates <- (lapply(college.names, FindCoordinates))
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
}
GetLong <- function(coord) {
lng <- c()
for (item in coord) {
lng <- c(lng, item$lng)
}
return(lng)
}
lattitude <- GetLat(coordinates)
lat <- c(lat, item[[2]]$lat)
coord <- coordinates
lat <- c()
for (item in coord) {
lat <- c(lat, item[[2]]$lat)
}
coord[1, lat]
coord[[1, lat]]
is.list(coordinates)
coord[[1, ]]
coord$lat
View(coords)
coord <- coordinates
coord$lat
coord[[, "lat"]]
coord[, "lat"]
coord[lat]
lat <- coord[lat]
print(lat)
lat <- coord[[1,lat]]
for (item in coord) {
lat <- c(lat, item[[2]]$lat)
}
for (item in coord) {
lat <- c(lat, coord[[item, lat]])
}
lat <- coord[[1,1]]
lat <- coord[[1,1, 1]]
as.list("name" = name, coords)
as.list(name = name, coords)
as.list(this.name = name, coords)
as.list(c(this.name = name, coords))
as.list(c(name = name, coords))
to.returm <- as.list(c(name = name, coords))
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
to.return <- as.list(c(name = name, coords))
return(to.return)
}
small.list <- c("University of Washington", "washington statue university")
small.list.coord <- (lapply(small.list, FindCoordinates))
lattitude <- GetLat(small.list.coord)
longitude <- GetLong(small.list.coord)
GetThing <- function(coord, thing) {
for (item in thing) {
lat <- c(lat, item$thing)
}
return(lat)
}
lattitude <- GetLat(small.list.coord)
lattitude <- GetThing(small.list.coord)
lattitude <- GetThing(small.list.coord, lat)
GetThing <- function(coord, thing) {
for (item in thing) {
lat <- c(lat, item$thing)
}
return(lat)
}
GetThing <- function(coord, thing) {
for (item in coord) {
lat <- c(lat, item$thing)
}
return(lat)
}
lattitude <- GetThing(small.list.coord, "lat")
lat <- c()
for (item in coord) {
lat <- c(lat, item$thing)
}
return(lat)
GetThing <- function(coord, thing) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$thing)
}
return(lat)
}
lattitude <- GetThing(small.list.coord, "lat")
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
}
lattitude <- GetThing(small.list.coord, "lat")
lattitude <- GetThing(small.list.coord, "lat")
small.list <- c("University of Washington", "washington statue university")
small.list.coord <- (lapply(small.list, FindCoordinates))
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
lattitude <- GetThing(small.list.coord, "lat")
lattitude <- GetLat(small.list.coord, "lat")
lattitude <- GetLat(small.list.coord)
GetLong <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$long)
}
return(lat)
}
GetName <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$name)
}
return(lat)
}
lattitude <- GetLat(small.list.coord)
longitude <- GetLong(small.list.coord)
GetLong <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lng)
}
return(lat)
}
longitude <- GetLong(small.list.coord)
names <- GetName(small.list.coord)
schools.and.coordinates <- data.frame(names, lattitude, longitude)
View(maps.data)
View(schools.and.coordinates)
View(schools.and.coordinates)
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
to.return <- as.list(c(name = name, coords))
return(to.return)
}
coordinates <- (lapply(college.names, FindCoordinates))
coordinates <- as.list(coordinates)
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
}
GetLong <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lng)
}
return(lat)
}
GetName <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$name)
}
return(lat)
}
lattitude <- GetLat(coordinates)
longitude <- GetLong(coordinates)
names <- GetName(coordinates)
schools.and.coordinates <- data.frame(names, lattitude, longitude)
print(coordinates)
GetName <- function(coord) {
lat <- c()
for (item in coord) {
if (!is.na(item$lat))
lat <- c(lat, item$name)
}
return(lat)
}
names <- GetName(coordinates)
GetName <- function(coord) {
lat <- c()
for (item in coord) {
if (!is.null(item$lat))
lat <- c(lat, item$name)
}
return(lat)
}
names <- GetName(coordinates)
schools.and.coordinates <- data.frame(names, lattitude, longitude)
GetName <- function(coord) {
lat <- c()
for (item in coord) {
if (!is.null(item$lat) && !is.null(item$lng))
lat <- c(lat, item$name)
}
return(lat)
}
names <- GetName(coordinates)
GetName <- function(coord) {
lat <- c()
for (item in coord) {
if (is.null(item$lat) && !is.null(item$lng))
lat <- c(lat, item$name)
}
return(lat)
}
names <- GetName(coordinates)
GetName <- function(coord) {
lat <- c()
for (item in coord) {
if (is.null(item$lat) && is.null(item$lng))
lat <- c(lat, item$name)
}
return(lat)
}
names <- GetName(coordinates)
print(coordinates)
print(names)
s.a.c <- data.frame(coordinates$name, coordinates$lattitude, coordinates$longitude)
View(schools.and.coordinates)
View(s.a.c)
View(s.a.c)
df <- data.frame(matrix(unlist(coordinates), nrow=267, byrow=T))
df <- data.frame(matrix(unlist(coordinates), nrow=3, byrow=T))
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
to.return <- as.list(c(name = name, coords))
return(to.return)
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
library(httr)
library(jsonlite)
library(XML)
library(dplyr)
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
maps.app.id <- "AIzaSyCddaHkTvSYmsqCDwnFnvAMxhD0GFltFMU"
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
to.return <- as.list(c(name = name, coords))
return(to.return)
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
maps.data <- maps.data$results
is.vector(college.names)
coordinates <- (lapply(college.names, FindCoordinates))
base.url.maps <- "https://maps.googleapis.com/maps/api/geocode/json"
maps.app.id <- "AIzaSyCddaHkTvSYmsqCDwnFnvAMxhD0GFltFMU"
FindCoordinates <- function(name) {
query.params <- list(address = name, key = maps.app.id)
maps.response <- GET(base.url.maps, query = query.params)
maps.content <- content(maps.response, "text")
maps.data <- fromJSON(maps.content)
maps.data <- maps.data$results
geometry <- maps.data$geometry
coords <- geometry$location
to.return <- as.list(c(name = name, coords))
return(to.return)
}
college.names <- title.IX.data %>% group_by(college) %>% distinct()
college.names <- college.names$college
is.vector(college.names)
print(college.names)
coordinates <- (lapply(college.names, FindCoordinates))
print(coordinates)
GetLat <- function(coord) {
lat <- c()
for (item in coord) {
lat <- c(lat, item$lat)
}
return(lat)
}
library(readxl)
dataset <- read_excel(NULL)
View(dataset)
